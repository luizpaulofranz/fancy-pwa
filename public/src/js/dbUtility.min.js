function writeData(t,e){return dbPromise.then(n=>{let r=n.transaction(t,"readwrite");return r.objectStore(t).put(e),r.complete})}function readAll(t){return dbPromise.then(e=>{return e.transaction(t,"readonly").objectStore(t).getAll()})}function getById(t,e){return dbPromise.then(n=>{return n.transaction(t,"readonly").objectStore(t).get(e)})}function clearAll(t){return dbPromise.then(e=>{let n=e.transaction(t,"readwrite");return n.objectStore(t).clear(),n.complete})}function deleteRow(t,e){return dbPromise.then(n=>{let r=n.transaction(t,"readwrite");return r.objectStore(t).delete(e),r.complete}).then(()=>{console.log("Item "+e+" deleted!")})}function urlBase64ToUint8Array(t){for(var e="=".repeat((4-t.length%4)%4),n=(t+e).replace(/\-/g,"+").replace(/_/g,"/"),r=window.atob(n),o=new Uint8Array(r.length),a=0;a<r.length;++a)o[a]=r.charCodeAt(a);return o}function dataURItoBlob(t){for(var e=atob(t.split(",")[1]),n=t.split(",")[0].split(":")[1].split(";")[0],r=new ArrayBuffer(e.length),o=new Uint8Array(r),a=0;a<e.length;a++)o[a]=e.charCodeAt(a);return new Blob([r],{type:n})}let dbPromise=idb.open("posts-store",1,t=>{t.objectStoreNames.contains("posts")||t.createObjectStore("posts",{keyPath:"id"}),t.objectStoreNames.contains("sync-posts")||t.createObjectStore("sync-posts",{keyPath:"id"})});